<%!
import sys
sys.path.append('../')
from field import Struct, EnumField, Union, DataType, Field, PreDeclared
%>
/*****
*
* Copyright (C) 2005-2016 CS-SI. All Rights Reserved.
* Author: Yoann Vandoorselaere <yoann.v@prelude-ids.com>
*
* This file is part of the ${prefix.capitalize()} library.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License along
* with this program; if not, write to the Free Software Foundation, Inc.,
* 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*
*****/

/*
 * This file was automatically generated by our generator, version ${generator_version}
 *
 * Do not make changes to this file unless you know what you are doing.
 * modify the template interface file instead.
 * ${name_lib.upper()} version : ${lib_version}
 * Template file: generate-value-class-swig-mapping.i.mako
 *
 */

<%
    last_id = -1
    object_class = None
%>
${"%"}{

void *swig_${name_lib}_value_get_descriptor(${name_lib}_value_t *value)
{
        unsigned int i = 0;
        ${name_lib}_class_id_t wanted_class = ${name_lib}_value_get_class(value);
	const struct {
	        ${name_lib}_class_id_t class;
	        const char *typename;
	} tbl[] = {
% for obj in sorted(lib_classes.obj_list, key=lambda obj: obj.ident):
% if isinstance(obj, Struct) or isinstance(obj, EnumField):
% if isinstance(obj, Struct):
<% object_class = name_lib.upper() + "_CLASS_ID_" + (obj.short_type_name).upper() %>                  { ${object_class}, "${obj.type_name} *" },
% endif
% endif
% endfor
                { 0, NULL }
        };

        for ( i = 0; tbl[i].typename != NULL; i++ ) {
                if ( tbl[i].class == wanted_class )
		        return SWIG_TypeQuery(tbl[i].type_name);
        }

        return NULL;
}

${"%"}}

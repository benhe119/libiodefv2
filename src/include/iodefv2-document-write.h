
/*****
*
* Copyright (C) 2001-2016 CS-SI. All Rights Reserved.
* Author: Yoann Vandoorselaere <yoann.v@prelude-ids.com>
*
* This file is part of the Libiodefv2 library.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License along
* with this program; if not, write to the Free Software Foundation, Inc.,
* 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*
*****/

/*
 * This file was automatically generated by our generator, version 1
 *
 * Do not make changes to this file unless you know what you are doing.
 * modify the template interface file instead.
 * IODEFV2 version : RFC5070-bis-26
 * Template file: generate-top-level-class-write.h.mako
 *
 */

#ifndef _LIBIODEFV2_IODEFV2_DOCUMENT_WRITE_H
#define _LIBIODEFV2_IODEFV2_DOCUMENT_WRITE_H

#include "libiodefv2-inttypes.h"
#include "iodefv2-time.h"
#include "libiodefv2-string.h"
#include "libiodefv2-io.h"

#ifdef __cplusplus
 extern "C" {
#endif

int iodefv2_telephone_write(iodefv2_telephone_t *telephone, libiodefv2_io_t *fd);
int iodefv2_certificate_write(iodefv2_certificate_t *certificate, libiodefv2_io_t *fd);
int iodefv2_key_write(iodefv2_key_t *key, libiodefv2_io_t *fd);
int iodefv2_observable_reference_write(iodefv2_observable_reference_t *observable_reference, libiodefv2_io_t *fd);
int iodefv2_registry_handle_write(iodefv2_registry_handle_t *registry_handle, libiodefv2_io_t *fd);
int iodefv2_time_impact_write(iodefv2_time_impact_t *time_impact, libiodefv2_io_t *fd);
int iodefv2_record_pattern_write(iodefv2_record_pattern_t *record_pattern, libiodefv2_io_t *fd);
int iodefv2_reference_write(iodefv2_reference_t *reference, libiodefv2_io_t *fd);
int iodefv2_postal_address_write(iodefv2_postal_address_t *postal_address, libiodefv2_io_t *fd);
int iodefv2_node_role_write(iodefv2_node_role_t *node_role, libiodefv2_io_t *fd);
int iodefv2_incident_id_write(iodefv2_incident_id_t *incident_id, libiodefv2_io_t *fd);
int iodefv2_alternative_indicator_id_write(iodefv2_alternative_indicator_id_t *alternative_indicator_id, libiodefv2_io_t *fd);
int iodefv2_confidence_write(iodefv2_confidence_t *confidence, libiodefv2_io_t *fd);
int iodefv2_system_impact_write(iodefv2_system_impact_t *system_impact, libiodefv2_io_t *fd);
int iodefv2_software_reference_write(iodefv2_software_reference_t *software_reference, libiodefv2_io_t *fd);
int iodefv2_business_impact_write(iodefv2_business_impact_t *business_impact, libiodefv2_io_t *fd);
int iodefv2_indicator_reference_write(iodefv2_indicator_reference_t *indicator_reference, libiodefv2_io_t *fd);
int iodefv2_email_write(iodefv2_email_t *email, libiodefv2_io_t *fd);
int iodefv2_intended_impact_write(iodefv2_intended_impact_t *intended_impact, libiodefv2_io_t *fd);
int iodefv2_additional_data_write(iodefv2_additional_data_t *additional_data, libiodefv2_io_t *fd);
int iodefv2_counter_write(iodefv2_counter_t *counter, libiodefv2_io_t *fd);
int iodefv2_monetary_impact_write(iodefv2_monetary_impact_t *monetary_impact, libiodefv2_io_t *fd);
int iodefv2_service_name_write(iodefv2_service_name_t *service_name, libiodefv2_io_t *fd);
int iodefv2_indicator_id_write(iodefv2_indicator_id_t *indicator_id, libiodefv2_io_t *fd);
int iodefv2_signature_data_write(iodefv2_signature_data_t *signature_data, libiodefv2_io_t *fd);
int iodefv2_address_write(iodefv2_address_t *address, libiodefv2_io_t *fd);
int iodefv2_application_header_write(iodefv2_application_header_t *application_header, libiodefv2_io_t *fd);
int iodefv2_certificate_data_write(iodefv2_certificate_data_t *certificate_data, libiodefv2_io_t *fd);
int iodefv2_threat_actor_write(iodefv2_threat_actor_t *threat_actor, libiodefv2_io_t *fd);
int iodefv2_method_write(iodefv2_method_t *method, libiodefv2_io_t *fd);
int iodefv2_alternative_id_write(iodefv2_alternative_id_t *alternative_id, libiodefv2_io_t *fd);
int iodefv2_software_write(iodefv2_software_t *software, libiodefv2_io_t *fd);
int iodefv2_nameservers_write(iodefv2_nameservers_t *nameservers, libiodefv2_io_t *fd);
int iodefv2_windows_registry_keys_modified_write(iodefv2_windows_registry_keys_modified_t *windows_registry_keys_modified, libiodefv2_io_t *fd);
int iodefv2_campaign_write(iodefv2_campaign_t *campaign, libiodefv2_io_t *fd);
int iodefv2_assessment_write(iodefv2_assessment_t *assessment, libiodefv2_io_t *fd);
int iodefv2_attack_phase_write(iodefv2_attack_phase_t *attack_phase, libiodefv2_io_t *fd);
int iodefv2_contact_write(iodefv2_contact_t *contact, libiodefv2_io_t *fd);
int iodefv2_related_activity_write(iodefv2_related_activity_t *related_activity, libiodefv2_io_t *fd);
int iodefv2_domain_contacts_write(iodefv2_domain_contacts_t *domain_contacts, libiodefv2_io_t *fd);
int iodefv2_history_item_write(iodefv2_history_item_t *history_item, libiodefv2_io_t *fd);
int iodefv2_fuzzy_hash_write(iodefv2_fuzzy_hash_t *fuzzy_hash, libiodefv2_io_t *fd);
int iodefv2_hash_write(iodefv2_hash_t *hash, libiodefv2_io_t *fd);
int iodefv2_detection_pattern_write(iodefv2_detection_pattern_t *detection_pattern, libiodefv2_io_t *fd);
int iodefv2_expectation_write(iodefv2_expectation_t *expectation, libiodefv2_io_t *fd);
int iodefv2_domain_data_write(iodefv2_domain_data_t *domain_data, libiodefv2_io_t *fd);
int iodefv2_hash_data_write(iodefv2_hash_data_t *hash_data, libiodefv2_io_t *fd);
int iodefv2_bulk_observable_format_write(iodefv2_bulk_observable_format_t *bulk_observable_format, libiodefv2_io_t *fd);
int iodefv2_history_write(iodefv2_history_t *history, libiodefv2_io_t *fd);
int iodefv2_discovery_write(iodefv2_discovery_t *discovery, libiodefv2_io_t *fd);
int iodefv2_bulk_observable_write(iodefv2_bulk_observable_t *bulk_observable, libiodefv2_io_t *fd);
int iodefv2_email_data_write(iodefv2_email_data_t *email_data, libiodefv2_io_t *fd);
int iodefv2_file_write(iodefv2_file_t *file, libiodefv2_io_t *fd);
int iodefv2_node_write(iodefv2_node_t *node, libiodefv2_io_t *fd);
int iodefv2_service_write(iodefv2_service_t *service, libiodefv2_io_t *fd);
int iodefv2_file_data_write(iodefv2_file_data_t *file_data, libiodefv2_io_t *fd);
int iodefv2_system_write(iodefv2_system_t *system, libiodefv2_io_t *fd);
int iodefv2_record_data_write(iodefv2_record_data_t *record_data, libiodefv2_io_t *fd);
int iodefv2_record_write(iodefv2_record_t *record, libiodefv2_io_t *fd);
int iodefv2_flow_write(iodefv2_flow_t *flow, libiodefv2_io_t *fd);
int iodefv2_event_data_write(iodefv2_event_data_t *event_data, libiodefv2_io_t *fd);
int iodefv2_observable_write(iodefv2_observable_t *observable, libiodefv2_io_t *fd);
int iodefv2_indicator_expression_write(iodefv2_indicator_expression_t *indicator_expression, libiodefv2_io_t *fd);
int iodefv2_indicator_write(iodefv2_indicator_t *indicator, libiodefv2_io_t *fd);
int iodefv2_indicator_data_write(iodefv2_indicator_data_t *indicator_data, libiodefv2_io_t *fd);
int iodefv2_incident_write(iodefv2_incident_t *incident, libiodefv2_io_t *fd);
int iodefv2_document_write(iodefv2_document_t *document, libiodefv2_io_t *fd);


#ifdef __cplusplus
 }
#endif

#endif /* _LIBIODEFV2_IODEFV2_DOCUMENT_WRITE_H */
